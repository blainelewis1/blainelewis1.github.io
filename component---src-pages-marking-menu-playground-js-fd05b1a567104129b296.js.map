{"version":3,"sources":["webpack:///./src/components/MarkingMenu.js","webpack:///./src/components/DelayGroup.js","webpack:///./src/pages/MarkingMenuPlayground.js"],"names":["MenuItem","styled","span","Guide","menuItems","radius","theta","Math","PI","length","map","menuItem","i","transform","cos","sin","width","height","style","overflow","MarkingMenu","delay","ref","useRef","useState","showGuide","setShowGuide","x","y","currentPos","setCurrentPos","useEffect","timeout","refValue","current","displayGuide","e","setTimeout","clientX","clientY","hideGuide","parentElement","addEventListener","clearTimeout","removeEventListener","position","left","top","viewBox","DelayBar","div","Delay","timePassed","min","DelayGroup","delays","framerate","padding","Date","now","timeStarted","setTimeStarted","setFrame","id","setInterval","frame","clearInterval","MarkingMenuPlayground"],"mappings":"yIAGIA,EAAWC,IAAOC,KAAV,4EAAGD,CAAH,6IAaRE,EAAQ,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAA8B,IAAnBC,cAAmB,MAAV,IAAU,EACvCC,EAAmB,EAAVC,KAAKC,GAAUJ,EAAUK,OAEtC,OACE,2BACGL,EAAUM,KAAI,SAACC,EAAUC,GAAX,OACb,uBACEC,UAAS,aAAeN,KAAKO,IAAIR,EAAQM,GAAKP,EAArC,IACPE,KAAKQ,IAAIT,EAAQM,GAAKP,EADf,KAIT,mCAAeW,MAAO,EAAGC,OAAQ,EAAGC,MAAO,CAAEC,SAAU,YACrD,kBAACnB,EAAD,KAAWW,UAwERS,EAxDK,SAAC,GAGd,IAAD,IAFJhB,iBAEI,MAFQ,CAAC,QAAS,QAAS,OAAQ,KAAM,IAAK,OAAQ,OAAQ,SAE9D,MADJiB,aACI,MADI,IACJ,EACAC,EAAMC,mBADN,EAE4BC,oBAAS,GAApCC,EAFD,KAEYC,EAFZ,OAI8BF,mBAAS,CAAEG,EAAG,EAAGC,EAAG,IAAjDC,EAJD,KAIaC,EAJb,KAMJC,qBAAU,WACR,IACIC,EADAC,EAAWX,EAAIY,QAGfC,EAAe,SAAAC,GACjBJ,EAAUK,YAAW,kBAAMX,GAAa,KAAOL,GAC/CS,EAAc,CAAEH,EAAGS,EAAEE,QAASV,EAAGQ,EAAEG,WAGjCC,EAAY,kBAAMd,GAAa,IAOnC,OALIO,IACFA,EAASQ,cAAcC,iBAAiB,YAAaP,GACrDF,EAASQ,cAAcC,iBAAiB,UAAWF,IAG9C,WACLG,aAAaX,GAETC,IACFA,EAASQ,cAAcG,oBAAoB,YAAaT,GACxDF,EAASQ,cAAcG,oBAAoB,UAAWJ,OAGzD,CAACnB,IAEJ,IACIL,EAGJ,OAFAA,EAAiBX,IAGf,yBACEa,MAAO,CACL2B,SAAU,WACVC,KAAMjB,EAAWF,EAAIX,EAAQ,EAC7B+B,IAAKlB,EAAWD,EAAIX,KAEtBK,IAAKA,EACLN,MAAUA,EAAL,KACLC,OAAWA,QACX+B,QAAO,IAAMhC,EAAQ,EAAd,SAAkCA,EAAlC,QAENS,GAAa,kBAAC,EAAD,CAAOpB,OAhBZ,IAgB4BD,UAAWA,M,qBCnElD6C,EAAWhD,IAAOiD,IAAV,2EAAGjD,CAAH,kFAER,IAGkB,qBAAGoB,SAGnB8B,EAAQ,SAAC,GAA2B,IAAzB9B,EAAwB,EAAxBA,MAAO+B,EAAiB,EAAjBA,WACtB,OAAO,kBAACH,EAAD,CAAUjC,MAAOT,KAAK8C,IAAI,IAAMD,EAAa/B,EAAS,QAGhDiC,EApCI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,OAA4C,IAApCC,iBAAoC,MAAxB,GAAwB,MAApBC,eAAoB,MAAV,IAAU,IAC5BjC,mBAASkC,KAAKC,OAA7CC,EAD2D,KAC9CC,EAD8C,KAEzDC,EAAYtC,mBAAS,GAFoC,GAIhEO,qBAAU,WACR,IAAIgC,EAAKC,aAAY,kBAAMF,GAAS,SAAAG,GAAK,OAAIA,EAAQ,OAAI,IAAOT,GAEhE,OAAO,kBAAMU,cAAcH,OAE7B,IAAIX,EAAaM,KAAKC,MAAQC,EAM9B,OAJIR,GAAc,IAAIG,GAAUE,GAC9BI,EAAeH,KAAKC,OAIpB,6BACGJ,EAAO7C,KAAI,SAAAW,GAAK,OACf,kBAAC,EAAD,CAAOA,MAAOA,EAAO+B,WAAYA,SCT1Be,UATe,WAC5B,OACE,yBAAKjD,MAAO,CAAEF,MAAO,OAAQC,OAAQ,UACnC,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYsC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAM","file":"component---src-pages-marking-menu-playground-js-fd05b1a567104129b296.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\nimport styled from \"styled-components\"\n\nlet MenuItem = styled.span`\n  border: solid 1px;\n  padding: 8px;\n  user-select: none;\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #64b5f6;\n  }\n`\n\nlet Guide = ({ menuItems, radius = 150 }) => {\n  let theta = (Math.PI * 2) / menuItems.length\n\n  return (\n    <g>\n      {menuItems.map((menuItem, i) => (\n        <g\n          transform={`translate(${Math.cos(theta * i) * radius},${\n            Math.sin(theta * i) * radius\n          })`}\n        >\n          <foreignObject width={1} height={1} style={{ overflow: \"visible\" }}>\n            <MenuItem>{menuItem}</MenuItem>\n          </foreignObject>\n          {/* <text\n            // x={Math.cos(theta * i) * radius}\n            // y={Math.sin(theta * i) * radius}\n            textAnchor=\"middle\"\n          >\n            {menuItem}\n          </text> */}\n          {/* <rect width=\"100%\" height=\"100%\" /> */}\n        </g>\n      ))}\n    </g>\n  )\n}\n\nconst MarkingMenu = ({\n  menuItems = [\"hello\", \"world\", \"here\", \"is\", \"a\", \"menu\", \"item\", \"thing\"],\n  delay = 500,\n}) => {\n  let ref = useRef()\n  let [showGuide, setShowGuide] = useState(false)\n\n  let [currentPos, setCurrentPos] = useState({ x: 0, y: 0 })\n\n  useEffect(() => {\n    let refValue = ref.current\n    let timeout\n\n    let displayGuide = e => {\n      timeout = setTimeout(() => setShowGuide(true), delay)\n      setCurrentPos({ x: e.clientX, y: e.clientY })\n    }\n\n    let hideGuide = () => setShowGuide(false)\n\n    if (refValue) {\n      refValue.parentElement.addEventListener(\"mousedown\", displayGuide)\n      refValue.parentElement.addEventListener(\"mouseup\", hideGuide)\n    }\n\n    return () => {\n      clearTimeout(timeout)\n\n      if (refValue) {\n        refValue.parentElement.removeEventListener(\"mousedown\", displayGuide)\n        refValue.parentElement.removeEventListener(\"mouseup\", hideGuide)\n      }\n    }\n  }, [delay])\n\n  let radius = 150\n  let width, height\n  width = height = radius * 2 + 200\n\n  return (\n    <svg\n      style={{\n        position: \"absolute\",\n        left: currentPos.x - width / 2,\n        top: currentPos.y - height / 2,\n      }}\n      ref={ref}\n      width={`${width}px`}\n      height={`${height}px`}\n      viewBox={`-${width / 2} -${height / 2} ${width} ${height}`}\n    >\n      {showGuide && <Guide radius={radius} menuItems={menuItems} />}\n    </svg>\n  )\n}\n\nexport default MarkingMenu\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { max } from \"lodash\"\n\nconst DelayGroup = ({ delays, framerate = 20, padding = 500 }) => {\n  let [timeStarted, setTimeStarted] = useState(Date.now())\n  let [, setFrame] = useState(0)\n\n  useEffect(() => {\n    let id = setInterval(() => setFrame(frame => frame + 1), 1000 / framerate)\n\n    return () => clearInterval(id)\n  })\n  let timePassed = Date.now() - timeStarted\n\n  if (timePassed >= max(delays) + padding) {\n    setTimeStarted(Date.now())\n  }\n\n  return (\n    <div>\n      {delays.map(delay => (\n        <Delay delay={delay} timePassed={timePassed} />\n      ))}\n    </div>\n  )\n}\n\nlet DelayBar = styled.div`\n  width: 100%;\n  ${\"\" /* ${({ width }) => width}%; */}\n  background-color: blue;\n  height: 20px;\n  transition: width ${({ delay }) => delay} linear;\n`\n\nconst Delay = ({ delay, timePassed }) => {\n  return <DelayBar width={Math.min(100, (timePassed / delay) * 100)} />\n}\n\nexport default DelayGroup\n","import React from \"react\"\nimport MarkingMenu from \"../components/MarkingMenu\"\nimport DelayGroup from \"../components/DelayGroup\"\n\nconst MarkingMenuPlayground = () => {\n  return (\n    <div style={{ width: \"100%\", height: \"500px\" }}>\n      <MarkingMenu />\n      <DelayGroup delays={[200, 333, 500, 1000, 2000]} />\n    </div>\n  )\n}\n\nexport default MarkingMenuPlayground\n"],"sourceRoot":""}