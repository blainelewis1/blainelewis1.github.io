{"componentChunkName":"component---src-templates-blog-js","path":"/blog/bandit/delay/","result":{"data":{"mdx":{"id":"c630c7f9-c2de-51ab-b8b5-b997b2da5817","excerpt":"Longer Delays Increase Expert Use in Rehearsal-based Interfaces Rehearsal-based interfaces are a particular type of interface where bothâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Cite = makeShortcode(\"Cite\");\nvar MarkingMenuPlayground = makeShortcode(\"MarkingMenuPlayground\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Longer Delays Increase Expert Use in Rehearsal-based Interfaces\"), mdx(\"p\", null, \"Rehearsal-based interfaces are a particular type of interface where both novices and experts invoke commands using a nearly identical interaction. The most famous version of this is a marking menu \", mdx(Cite, {\n    bibKey: \"Kurtenbach\",\n    mdxType: \"Cite\"\n  })), mdx(MarkingMenuPlayground, {\n    mdxType: \"MarkingMenuPlayground\"\n  }), mdx(\"p\", null, \"Other examples of rehearsal-based interfaces are FastTap, OctoPocus and Markpad, but there are many, many more. We can actually decompose the components of these interfaces by using a descriptive model.\"), mdx(\"p\", null, \"Most interfaces from academia use a delay ranging from 200ms to 500ms. Commercial applications like Blender and Fusion tend to use shorter delays. Despite this large range of delays there has been little work to identify the effect of delay on a user's performance and overall experience. The original idea behind adding a delay in the first place was threefold:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Computers were slower, so there needed to be a delay to render the menu.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If the menu showed up too soon it might be jarring.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"It might encourage expert use.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"blog/bandit/delay/"}}},"pageContext":{"id":"c630c7f9-c2de-51ab-b8b5-b997b2da5817"}},"staticQueryHashes":["4176149245"]}